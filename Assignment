#include <iostream>
#include <string>
#include <vector>

using namespace std;

class Product {
private:
    string name;
    int quantity;
    float price;

public:
    Product(string n, int q, float p) : name(n), quantity(q), price(p) {}

    string getName() const {
        return name;
    }

    int getQuantity() const {
        return quantity;
    }

    float getPrice() const {
        return price;
    }

    void setName(string n) {
        name = n;
    }

    void setQuantity(int q) {
        quantity = q;
    }

    void setPrice(float p) {
        price = p;
    }
};

class StockManagement {
private:
    vector<Product> products;

public:
    void addProduct(const Product& product) {
        products.push_back(product);
    }

    void displayProducts() const {
        cout << "Products in stock:\n";
        for (const auto& product : products) {
            cout << "Name: " << product.getName() << ", Quantity: " << product.getQuantity() << ", Price: $" << product.getPrice() << endl;
        }
    }

    bool searchProduct(const string& name) const {
        for (const auto& product : products) {
            if (product.getName() == name) {
                return true;
            }
        }
        return false;
    }

    void updateQuantity(const string& name, int newQuantity) {
        for (auto& product : products) {
            if (product.getName() == name) {
                product.setQuantity(newQuantity);
                return;
            }
        }
        cout << "Product not found.\n";
    }

    void updatePrice(const string& name, float newPrice) {
        for (auto& product : products) {
            if (product.getName() == name) {
                product.setPrice(newPrice);
                return;
            }
        }
        cout << "Product not found.\n";
    }
};

int main() {
    StockManagement stockManager;

    // Adding some sample products
    stockManager.addProduct(Product("Shirt", 50, 25.99));
    stockManager.addProduct(Product("Jeans", 30, 39.99));
    stockManager.addProduct(Product("Shoes", 20, 49.99));

    stockManager.displayProducts();

    // Example of updating quantity and price
    stockManager.updateQuantity("Shirt", 40);
    stockManager.updatePrice("Jeans", 49.99);

    stockManager.displayProducts();

    return 0;
}
